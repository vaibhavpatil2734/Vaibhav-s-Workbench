{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitOne\\\\Vaibhav's Workbench\\\\frontend\\\\src\\\\Terminal\\\\Terminal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Terminal = () => {\n  _s();\n  const [history, setHistory] = useState([]); // Command history\n  const [input, setInput] = useState(\"\"); // Current user input\n  const terminalRef = useRef(null); // Terminal container reference\n  const inputRef = useRef(null); // Input field reference\n\n  const username = \"vaibhav\";\n  const hostname = \"workbench\";\n\n  // Mock command handler\n  const handleCommand = command => {\n    switch (command.trim().toLowerCase()) {\n      case \"help\":\n        return \"Available commands:\\nhelp - Show available commands\\nclear - Clear the terminal\\nabout - About this terminal\";\n      case \"clear\":\n        setHistory([]);\n        return \"\";\n      case \"about\":\n        return \"Welcome to Vaibhav's Terminal. This is a simulated terminal designed to showcase personal information and features.\";\n      case \"\":\n        return \"\";\n      // Empty input does nothing\n\n      default:\n        return `Command not found: ${command}`;\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    const trimmedInput = input.trim();\n    if (trimmedInput) {\n      const response = handleCommand(trimmedInput);\n      setHistory(prev => [...prev, `${username}@${hostname}:~$ ${trimmedInput}`, response]);\n    } else {\n      setHistory(prev => [...prev, `${username}@${hostname}:~$`]);\n    }\n    setInput(\"\"); // Clear input field\n  };\n\n  // Auto-scroll to the bottom of the terminal output\n  useEffect(() => {\n    terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\n  }, [history]);\n\n  // Focus the input when the terminal container is clicked\n  const handleTerminalClick = () => {\n    inputRef.current.focus();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"terminal-container\",\n    style: {\n      height: \"100%\",\n      backgroundColor: \"black\",\n      color: \"lime\",\n      fontFamily: \"'Courier New', Courier, monospace\",\n      overflowY: \"auto\",\n      cursor: \"text\",\n      position: \"relative\"\n    },\n    ref: terminalRef,\n    onClick: handleTerminalClick // Trigger input focus on click\n    ,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: \"1%\",\n        top: 0,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-start\",\n        width: \"98%\",\n        // Ensure it doesn't exceed the container\n        whiteSpace: \"pre-wrap\"\n      },\n      children: [history.map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: line\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"lime\",\n            marginRight: \"0.5rem\",\n            whiteSpace: \"nowrap\"\n          },\n          children: [username, \"@\", hostname, \":~$\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          style: {\n            flexGrow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            autoFocus: true,\n            ref: inputRef // Reference for focusing\n            ,\n            style: {\n              width: \"100%\",\n              backgroundColor: \"black\",\n              color: \"lime\",\n              border: \"none\",\n              outline: \"none\",\n              fontFamily: \"'Courier New', Courier, monospace\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Terminal, \"R9d50iZOhw76zolOeKCRLEEB5EI=\");\n_c = Terminal;\nexport default Terminal;\nvar _c;\n$RefreshReg$(_c, \"Terminal\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Terminal","_s","history","setHistory","input","setInput","terminalRef","inputRef","username","hostname","handleCommand","command","trim","toLowerCase","handleSubmit","e","preventDefault","trimmedInput","response","prev","current","scrollTop","scrollHeight","handleTerminalClick","focus","className","style","height","backgroundColor","color","fontFamily","overflowY","cursor","position","ref","onClick","children","left","top","display","flexDirection","alignItems","width","whiteSpace","map","line","index","fileName","_jsxFileName","lineNumber","columnNumber","marginRight","onSubmit","flexGrow","type","value","onChange","target","autoFocus","border","outline","_c","$RefreshReg$"],"sources":["D:/gitOne/Vaibhav's Workbench/frontend/src/Terminal/Terminal.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nconst Terminal = () => {\r\n  const [history, setHistory] = useState([]); // Command history\r\n  const [input, setInput] = useState(\"\"); // Current user input\r\n  const terminalRef = useRef(null); // Terminal container reference\r\n  const inputRef = useRef(null); // Input field reference\r\n\r\n  const username = \"vaibhav\";\r\n  const hostname = \"workbench\";\r\n\r\n  // Mock command handler\r\n  const handleCommand = (command) => {\r\n    switch (command.trim().toLowerCase()) {\r\n      case \"help\":\r\n        return \"Available commands:\\nhelp - Show available commands\\nclear - Clear the terminal\\nabout - About this terminal\";\r\n\r\n      case \"clear\":\r\n        setHistory([]);\r\n        return \"\";\r\n\r\n      case \"about\":\r\n        return \"Welcome to Vaibhav's Terminal. This is a simulated terminal designed to showcase personal information and features.\";\r\n\r\n      case \"\":\r\n        return \"\"; // Empty input does nothing\r\n\r\n      default:\r\n        return `Command not found: ${command}`;\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const trimmedInput = input.trim();\r\n    if (trimmedInput) {\r\n      const response = handleCommand(trimmedInput);\r\n      setHistory((prev) => [\r\n        ...prev,\r\n        `${username}@${hostname}:~$ ${trimmedInput}`,\r\n        response,\r\n      ]);\r\n    } else {\r\n      setHistory((prev) => [...prev, `${username}@${hostname}:~$`]);\r\n    }\r\n    setInput(\"\"); // Clear input field\r\n  };\r\n\r\n  // Auto-scroll to the bottom of the terminal output\r\n  useEffect(() => {\r\n    terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\r\n  }, [history]);\r\n\r\n  // Focus the input when the terminal container is clicked\r\n  const handleTerminalClick = () => {\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"terminal-container\"\r\n      style={{\r\n        height: \"100%\",\r\n        backgroundColor: \"black\",\r\n        color: \"lime\",\r\n        fontFamily: \"'Courier New', Courier, monospace\",\r\n        overflowY: \"auto\",\r\n        cursor: \"text\",\r\n        position: \"relative\",\r\n      }}\r\n      ref={terminalRef}\r\n      onClick={handleTerminalClick} // Trigger input focus on click\r\n    >\r\n      {/* Command History and Input Container */}\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          left: \"1%\",\r\n          top: 0,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"flex-start\",\r\n          width: \"98%\", // Ensure it doesn't exceed the container\r\n          whiteSpace: \"pre-wrap\",\r\n        }}\r\n      >\r\n        {/* Command History */}\r\n        {history.map((line, index) => (\r\n          <div key={index}>{line}</div>\r\n        ))}\r\n\r\n        {/* Command Input */}\r\n        <div style={{ display: \"flex\", alignItems: \"center\", width: \"100%\" }}>\r\n          <span\r\n            style={{\r\n              color: \"lime\",\r\n              marginRight: \"0.5rem\",\r\n              whiteSpace: \"nowrap\",\r\n            }}\r\n          >\r\n            {username}@{hostname}:~$\r\n          </span>\r\n          <form onSubmit={handleSubmit} style={{ flexGrow: 1 }}>\r\n            <input\r\n              type=\"text\"\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              autoFocus\r\n              ref={inputRef} // Reference for focusing\r\n              style={{\r\n                width: \"100%\",\r\n                backgroundColor: \"black\",\r\n                color: \"lime\",\r\n                border: \"none\",\r\n                outline: \"none\",\r\n                fontFamily: \"'Courier New', Courier, monospace\",\r\n              }}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Terminal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}