{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitOne\\\\Vaibhav's Workbench\\\\frontend\\\\src\\\\Terminal\\\\Terminal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Terminal = () => {\n  _s();\n  const [history, setHistory] = useState([]); // Command history\n  const terminalRef = useRef(null); // Terminal container reference\n  const inputRefs = useRef([]); // References for all input fields\n\n  const username = \"vaibhav\";\n  const hostname = \"workbench\";\n\n  // Mock command handler\n  const handleCommand = command => {\n    switch (command.trim().toLowerCase()) {\n      case \"help\":\n        return \"Available commands:\\nhelp - Show available commands\\nclear - Clear the terminal\\nabout - About this terminal\";\n      case \"clear\":\n        setHistory([]);\n        return \"\";\n      case \"about\":\n        return \"Welcome to Vaibhav's Terminal. This is a simulated terminal designed to showcase personal information and features.\";\n      case \"\":\n        return \"\";\n      // Empty input does nothing\n\n      default:\n        return `Command not found: ${command}`;\n    }\n  };\n\n  // Handle input changes for a specific command prompt\n  const handleInputChange = (index, value) => {\n    setHistory(prev => prev.map((entry, i) => i === index ? {\n      ...entry,\n      input: value\n    } : entry));\n  };\n\n  // Handle form submission for a specific command prompt\n  const handleSubmit = (e, index) => {\n    var _history$index;\n    e.preventDefault();\n    const trimmedInput = (_history$index = history[index]) === null || _history$index === void 0 ? void 0 : _history$index.input.trim();\n    if (trimmedInput) {\n      const response = handleCommand(trimmedInput);\n      setHistory(prev => [...prev.slice(0, index), {\n        ...prev[index],\n        output: response,\n        completed: true // Mark the command as completed\n      }, {\n        input: \"\",\n        completed: false\n      } // Add a new empty prompt\n      ]);\n    }\n  };\n\n  // Auto-scroll to the bottom of the terminal output\n  useEffect(() => {\n    terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\n  }, [history]);\n\n  // Focus the last input field when the terminal updates\n  useEffect(() => {\n    if (inputRefs.current.length > 0) {\n      var _inputRefs$current;\n      (_inputRefs$current = inputRefs.current[inputRefs.current.length - 1]) === null || _inputRefs$current === void 0 ? void 0 : _inputRefs$current.focus();\n    }\n  }, [history]);\n\n  // Initialize the terminal with one prompt\n  useEffect(() => {\n    setHistory([{\n      input: \"\",\n      completed: false\n    }]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"terminal-container\",\n    style: {\n      height: \"100%\",\n      backgroundColor: \"black\",\n      color: \"lime\",\n      fontFamily: \"'Courier New', Courier, monospace\",\n      overflowY: \"auto\",\n      padding: \"1rem\",\n      cursor: \"text\"\n    },\n    ref: terminalRef,\n    children: history.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          whiteSpace: \"nowrap\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"lime\",\n            marginRight: \"0.5rem\"\n          },\n          children: [username, \"@\", hostname, \":~$\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), entry.completed ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: entry.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleSubmit(e, index),\n          style: {\n            flexGrow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: entry.input,\n            onChange: e => handleInputChange(index, e.target.value),\n            ref: el => inputRefs.current[index] = el // Set input reference\n            ,\n            style: {\n              width: \"100%\",\n              backgroundColor: \"black\",\n              color: \"lime\",\n              border: \"none\",\n              outline: \"none\",\n              fontFamily: \"'Courier New', Courier, monospace\"\n            },\n            autoFocus: index === history.length - 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), entry.output && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"0.5rem\",\n          whiteSpace: \"pre-wrap\"\n        },\n        children: entry.output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Terminal, \"ujh62KmTnGK6r5JP6WHcp7u0JVc=\");\n_c = Terminal;\nexport default Terminal;\nvar _c;\n$RefreshReg$(_c, \"Terminal\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Terminal","_s","history","setHistory","terminalRef","inputRefs","username","hostname","handleCommand","command","trim","toLowerCase","handleInputChange","index","value","prev","map","entry","i","input","handleSubmit","e","_history$index","preventDefault","trimmedInput","response","slice","output","completed","current","scrollTop","scrollHeight","length","_inputRefs$current","focus","className","style","height","backgroundColor","color","fontFamily","overflowY","padding","cursor","ref","children","marginBottom","display","alignItems","whiteSpace","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","flexGrow","type","onChange","target","el","width","border","outline","autoFocus","marginTop","_c","$RefreshReg$"],"sources":["D:/gitOne/Vaibhav's Workbench/frontend/src/Terminal/Terminal.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nconst Terminal = () => {\r\n  const [history, setHistory] = useState([]); // Command history\r\n  const terminalRef = useRef(null); // Terminal container reference\r\n  const inputRefs = useRef([]); // References for all input fields\r\n\r\n  const username = \"vaibhav\";\r\n  const hostname = \"workbench\";\r\n\r\n  // Mock command handler\r\n  const handleCommand = (command) => {\r\n    switch (command.trim().toLowerCase()) {\r\n      case \"help\":\r\n        return \"Available commands:\\nhelp - Show available commands\\nclear - Clear the terminal\\nabout - About this terminal\";\r\n\r\n      case \"clear\":\r\n        setHistory([]);\r\n        return \"\";\r\n\r\n      case \"about\":\r\n        return \"Welcome to Vaibhav's Terminal. This is a simulated terminal designed to showcase personal information and features.\";\r\n\r\n      case \"\":\r\n        return \"\"; // Empty input does nothing\r\n\r\n      default:\r\n        return `Command not found: ${command}`;\r\n    }\r\n  };\r\n\r\n  // Handle input changes for a specific command prompt\r\n  const handleInputChange = (index, value) => {\r\n    setHistory((prev) =>\r\n      prev.map((entry, i) =>\r\n        i === index ? { ...entry, input: value } : entry\r\n      )\r\n    );\r\n  };\r\n\r\n  // Handle form submission for a specific command prompt\r\n  const handleSubmit = (e, index) => {\r\n    e.preventDefault();\r\n    const trimmedInput = history[index]?.input.trim();\r\n    if (trimmedInput) {\r\n      const response = handleCommand(trimmedInput);\r\n      setHistory((prev) => [\r\n        ...prev.slice(0, index),\r\n        {\r\n          ...prev[index],\r\n          output: response,\r\n          completed: true, // Mark the command as completed\r\n        },\r\n        { input: \"\", completed: false }, // Add a new empty prompt\r\n      ]);\r\n    }\r\n  };\r\n\r\n  // Auto-scroll to the bottom of the terminal output\r\n  useEffect(() => {\r\n    terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\r\n  }, [history]);\r\n\r\n  // Focus the last input field when the terminal updates\r\n  useEffect(() => {\r\n    if (inputRefs.current.length > 0) {\r\n      inputRefs.current[inputRefs.current.length - 1]?.focus();\r\n    }\r\n  }, [history]);\r\n\r\n  // Initialize the terminal with one prompt\r\n  useEffect(() => {\r\n    setHistory([{ input: \"\", completed: false }]);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"terminal-container\"\r\n      style={{\r\n        height: \"100%\",\r\n        backgroundColor: \"black\",\r\n        color: \"lime\",\r\n        fontFamily: \"'Courier New', Courier, monospace\",\r\n        overflowY: \"auto\",\r\n        padding: \"1rem\",\r\n        cursor: \"text\",\r\n      }}\r\n      ref={terminalRef}\r\n    >\r\n      {history.map((entry, index) => (\r\n        <div key={index} style={{ marginBottom: \"1rem\" }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              whiteSpace: \"nowrap\",\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                color: \"lime\",\r\n                marginRight: \"0.5rem\",\r\n              }}\r\n            >\r\n              {username}@{hostname}:~$\r\n            </span>\r\n            {entry.completed ? (\r\n              <span>{entry.input}</span>\r\n            ) : (\r\n              <form\r\n                onSubmit={(e) => handleSubmit(e, index)}\r\n                style={{ flexGrow: 1 }}\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  value={entry.input}\r\n                  onChange={(e) => handleInputChange(index, e.target.value)}\r\n                  ref={(el) => (inputRefs.current[index] = el)} // Set input reference\r\n                  style={{\r\n                    width: \"100%\",\r\n                    backgroundColor: \"black\",\r\n                    color: \"lime\",\r\n                    border: \"none\",\r\n                    outline: \"none\",\r\n                    fontFamily: \"'Courier New', Courier, monospace\",\r\n                  }}\r\n                  autoFocus={index === history.length - 1}\r\n                />\r\n              </form>\r\n            )}\r\n          </div>\r\n          {entry.output && (\r\n            <div style={{ marginTop: \"0.5rem\", whiteSpace: \"pre-wrap\" }}>\r\n              {entry.output}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Terminal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}