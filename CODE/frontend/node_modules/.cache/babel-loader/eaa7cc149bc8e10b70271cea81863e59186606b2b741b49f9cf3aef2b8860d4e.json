{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitOne\\\\Vaibhav's Workbench\\\\frontend\\\\src\\\\Panel\\\\Panel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Panel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfoPanel = () => {\n  _s();\n  const roles = [\"Open Source Contributor\", \"MERN Developer\", \"Cybersecurity Enthusiast\", \"Social Worker\", \"Tech Blogger\"];\n  const [currentRole, setCurrentRole] = useState(\"\");\n  const [roleIndex, setRoleIndex] = useState(0);\n  const [charIndex, setCharIndex] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  useEffect(() => {\n    const typingSpeed = isDeleting ? 100 : 150; // Typing and deleting speed\n    const pauseTime = 2000; // Pause before switching roles\n\n    const handleTyping = () => {\n      const role = roles[roleIndex];\n      if (isDeleting) {\n        setCurrentRole(role.substring(0, charIndex - 1)); // Delete character\n        setCharIndex(charIndex - 1);\n      } else {\n        setCurrentRole(role.substring(0, charIndex + 1)); // Add character\n        setCharIndex(charIndex + 1);\n      }\n\n      // Check if typing/deleting is done\n      if (!isDeleting && charIndex === role.length) {\n        setTimeout(() => setIsDeleting(true), pauseTime); // Pause before deleting\n      } else if (isDeleting && charIndex === 0) {\n        setIsDeleting(false);\n        setRoleIndex((roleIndex + 1) % roles.length); // Move to the next role\n      }\n    };\n    const typingInterval = setInterval(handleTyping, typingSpeed);\n    return () => clearInterval(typingInterval); // Cleanup interval\n  }, [charIndex, isDeleting, roles, roleIndex]);\n  useEffect(() => {\n    const canvas = document.getElementById(\"matrixCanvas\");\n    const ctx = canvas.getContext(\"2d\");\n\n    // Set canvas dimensions\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    const letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    const fontSize = 16;\n    const columns = canvas.width / fontSize;\n\n    // Array to hold the y-coordinate for each column\n    const drops = Array(Math.floor(columns)).fill(1);\n    const drawMatrix = () => {\n      ctx.fillStyle = \"rgba(0, 0, 0, 0.05)\";\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      ctx.fillStyle = \"#ff0000\"; // Red text\n      ctx.font = `${fontSize}px monospace`;\n      drops.forEach((y, x) => {\n        const text = letters[Math.floor(Math.random() * letters.length)];\n        ctx.fillText(text, x * fontSize, y * fontSize);\n\n        // Reset y-coordinate if it moves out of canvas\n        if (y * fontSize > canvas.height && Math.random() > 0.975) {\n          drops[x] = 0;\n        }\n        drops[x]++;\n      });\n    };\n    const interval = setInterval(drawMatrix, 50);\n\n    // Cleanup the interval on component unmount\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"info-panel scrollbar\",\n    id: \"scrollbar1\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"matrixCanvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello There! \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"wave\",\n          children: \"\\uD83D\\uDC4B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"I'M VAIBHAV PATIL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentRole\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(InfoPanel, \"9ISgtA2rjgf7Zt9ovoUTK4di3xU=\");\n_c = InfoPanel;\nexport default InfoPanel;\nvar _c;\n$RefreshReg$(_c, \"InfoPanel\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","InfoPanel","_s","roles","currentRole","setCurrentRole","roleIndex","setRoleIndex","charIndex","setCharIndex","isDeleting","setIsDeleting","typingSpeed","pauseTime","handleTyping","role","substring","length","setTimeout","typingInterval","setInterval","clearInterval","canvas","document","getElementById","ctx","getContext","width","window","innerWidth","height","innerHeight","letters","fontSize","columns","drops","Array","Math","floor","fill","drawMatrix","fillStyle","fillRect","font","forEach","y","x","text","random","fillText","interval","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/gitOne/Vaibhav's Workbench/frontend/src/Panel/Panel.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Panel.css\";\r\n\r\nconst InfoPanel = () => {\r\n  const roles = [\r\n    \"Open Source Contributor\",\r\n    \"MERN Developer\",\r\n    \"Cybersecurity Enthusiast\",\r\n    \"Social Worker\",\r\n    \"Tech Blogger\",\r\n  ];\r\n\r\n  const [currentRole, setCurrentRole] = useState(\"\");\r\n  const [roleIndex, setRoleIndex] = useState(0);\r\n  const [charIndex, setCharIndex] = useState(0);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const typingSpeed = isDeleting ? 100 : 150; // Typing and deleting speed\r\n    const pauseTime = 2000; // Pause before switching roles\r\n\r\n    const handleTyping = () => {\r\n      const role = roles[roleIndex];\r\n\r\n      if (isDeleting) {\r\n        setCurrentRole(role.substring(0, charIndex - 1)); // Delete character\r\n        setCharIndex(charIndex - 1);\r\n      } else {\r\n        setCurrentRole(role.substring(0, charIndex + 1)); // Add character\r\n        setCharIndex(charIndex + 1);\r\n      }\r\n\r\n      // Check if typing/deleting is done\r\n      if (!isDeleting && charIndex === role.length) {\r\n        setTimeout(() => setIsDeleting(true), pauseTime); // Pause before deleting\r\n      } else if (isDeleting && charIndex === 0) {\r\n        setIsDeleting(false);\r\n        setRoleIndex((roleIndex + 1) % roles.length); // Move to the next role\r\n      }\r\n    };\r\n\r\n    const typingInterval = setInterval(handleTyping, typingSpeed);\r\n\r\n    return () => clearInterval(typingInterval); // Cleanup interval\r\n  }, [charIndex, isDeleting, roles, roleIndex]);\r\n\r\n  useEffect(() => {\r\n    const canvas = document.getElementById(\"matrixCanvas\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    // Set canvas dimensions\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n\r\n    const letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n    const fontSize = 16;\r\n    const columns = canvas.width / fontSize;\r\n\r\n    // Array to hold the y-coordinate for each column\r\n    const drops = Array(Math.floor(columns)).fill(1);\r\n\r\n    const drawMatrix = () => {\r\n      ctx.fillStyle = \"rgba(0, 0, 0, 0.05)\";\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n      ctx.fillStyle = \"#ff0000\"; // Red text\r\n      ctx.font = `${fontSize}px monospace`;\r\n\r\n      drops.forEach((y, x) => {\r\n        const text = letters[Math.floor(Math.random() * letters.length)];\r\n        ctx.fillText(text, x * fontSize, y * fontSize);\r\n\r\n        // Reset y-coordinate if it moves out of canvas\r\n        if (y * fontSize > canvas.height && Math.random() > 0.975) {\r\n          drops[x] = 0;\r\n        }\r\n        drops[x]++;\r\n      });\r\n    };\r\n\r\n    const interval = setInterval(drawMatrix, 50);\r\n\r\n    // Cleanup the interval on component unmount\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"info-panel scrollbar\" id=\"scrollbar1\">\r\n      <canvas id=\"matrixCanvas\"></canvas>\r\n      <div className=\"content\">\r\n        <h1>\r\n          Hello There! <span className=\"wave\">ðŸ‘‹</span>\r\n        </h1>\r\n        <h2>I'M VAIBHAV PATIL</h2>\r\n        <p>{currentRole}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}