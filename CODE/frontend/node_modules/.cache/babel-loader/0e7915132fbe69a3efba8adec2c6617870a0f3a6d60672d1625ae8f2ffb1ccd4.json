{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitOne\\\\Vaibhav's Workbench\\\\CODE\\\\frontend\\\\src\\\\Panel\\\\Gallery\\\\Gallery.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ReactImageLightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\"; // Import Lightbox styles\nimport \"./Gallery.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Gallery() {\n  _s();\n  const images = [\"./A2rtboard.png\", \"./Artb12oard 1.png\"];\n  const captions = [\"Beautiful Abstract Design\",\n  // Caption for first image\n  \"Modern Digital Art\" // Caption for second image\n  ];\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isLightboxOpen, setIsLightboxOpen] = useState(false);\n\n  // Function to open lightbox\n  const openLightbox = () => setIsLightboxOpen(true);\n\n  // Function to close lightbox\n  const closeLightbox = () => setIsLightboxOpen(false);\n\n  // Auto-slide effect every 4 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentImage(prev => (prev + 1) % images.length);\n    }, 4000);\n    return () => clearInterval(interval);\n  }, [images]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"gallery-title\",\n      children: \"Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-image-container\",\n      onClick: openLightbox,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[currentImage],\n        alt: `Image ${currentImage + 1}`,\n        className: \"gallery-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"gallery-caption\",\n        children: captions[currentImage]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), isLightboxOpen && /*#__PURE__*/_jsxDEV(ReactImageLightbox, {\n      mainSrc: images[currentImage],\n      nextSrc: images[(currentImage + 1) % images.length],\n      prevSrc: images[(currentImage - 1 + images.length) % images.length],\n      onCloseRequest: closeLightbox,\n      onMovePrevRequest: () => setCurrentImage((currentImage - 1 + images.length) % images.length),\n      onMoveNextRequest: () => setCurrentImage((currentImage + 1) % images.length),\n      imageCaption: captions[currentImage] // Lightbox Caption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Gallery, \"vpKDWBLOoFVcuiA9spqmtH1uAHA=\");\n_c = Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useState","useEffect","ReactImageLightbox","jsxDEV","_jsxDEV","Gallery","_s","images","captions","currentImage","setCurrentImage","isLightboxOpen","setIsLightboxOpen","openLightbox","closeLightbox","interval","setInterval","prev","length","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","imageCaption","_c","$RefreshReg$"],"sources":["D:/gitOne/Vaibhav's Workbench/CODE/frontend/src/Panel/Gallery/Gallery.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactImageLightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\"; // Import Lightbox styles\r\nimport \"./Gallery.css\"\r\n\r\nexport default function Gallery() {\r\n  const images = [\r\n    \"./A2rtboard.png\",\r\n    \"./Artb12oard 1.png\"\r\n  ];\r\n\r\n  const captions = [\r\n    \"Beautiful Abstract Design\",  // Caption for first image\r\n    \"Modern Digital Art\"          // Caption for second image\r\n  ];\r\n\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [isLightboxOpen, setIsLightboxOpen] = useState(false);\r\n\r\n  // Function to open lightbox\r\n  const openLightbox = () => setIsLightboxOpen(true);\r\n\r\n  // Function to close lightbox\r\n  const closeLightbox = () => setIsLightboxOpen(false);\r\n\r\n  // Auto-slide effect every 4 seconds\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentImage((prev) => (prev + 1) % images.length);\r\n    }, 4000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [images]);\r\n\r\n  return (\r\n    <div className=\"gallery-container\">\r\n      <h1 className=\"gallery-title\">Gallery</h1>\r\n      \r\n      <div className=\"gallery-image-container\" onClick={openLightbox}>\r\n        <img\r\n          src={images[currentImage]}\r\n          alt={`Image ${currentImage + 1}`}\r\n          className=\"gallery-image\"\r\n        />\r\n        <p className=\"gallery-caption\">{captions[currentImage]}</p>  {/* Caption Below Image */}\r\n      </div>\r\n\r\n      {isLightboxOpen && (\r\n        <ReactImageLightbox\r\n          mainSrc={images[currentImage]}\r\n          nextSrc={images[(currentImage + 1) % images.length]}\r\n          prevSrc={images[(currentImage - 1 + images.length) % images.length]}\r\n          onCloseRequest={closeLightbox}\r\n          onMovePrevRequest={() =>\r\n            setCurrentImage((currentImage - 1 + images.length) % images.length)\r\n          }\r\n          onMoveNextRequest={() =>\r\n            setCurrentImage((currentImage + 1) % images.length)\r\n          }\r\n          imageCaption={captions[currentImage]} // Lightbox Caption\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}